name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency: ci-${{ github.ref_name }}

jobs:
  env:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.step1.outputs.env }}
      version: ${{ steps.step1.outputs.version }}
    steps:
      - id: step1
        run: |
          if [[ ${{ github.ref_name }} == main ]]; then
            echo "env=stag" >> $GITHUB_OUTPUT
            echo "version=stag" >> $GITHUB_OUTPUT
          else
            echo "env=dev" >> $GITHUB_OUTPUT
            echo "version=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
          fi

  build-and-push-1:
    needs: [env]
    environment: ${{ needs.env.outputs.env }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: go
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.6.0

      - name: Configure docker
        run: gcloud auth configure-docker

      - name: Build image
        run: |
          docker build \
          --tag eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-pubsub-processor:${{ needs.env.outputs.version }} \
          --build-arg CMD=pubsub-processor .

      - name: Push image
        run: docker push eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-pubsub-processor:${{ needs.env.outputs.version }}

  build-and-push-2:
    needs: [env]
    environment: ${{ needs.env.outputs.env }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: go
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.6.0

      - name: Configure docker
        run: gcloud auth configure-docker

      - name: Build image
        run: |
          docker build \
          --tag eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-web:${{ needs.env.outputs.version }} \
          --build-arg CMD=web .

      - name: Push image
        run: docker push eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-web:${{ needs.env.outputs.version }}

  build-and-push-3:
    needs: [env]
    environment: ${{ needs.env.outputs.env }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nextjs
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v0.6.0
      - run: |
          gcloud builds submit \
          --tag eu.gcr.io/${{ secrets.PROJECT_ID }}/nextjs:${{ needs.env.outputs.version }} \
          --project ${{ secrets.PROJECT_ID }}

  terraform:
    needs: [env, build-and-push-1, build-and-push-2, build-and-push-3]
    environment: ${{ needs.env.outputs.env }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - run: |
          terraform fmt -check -recursive
      - run: |
          terraform init \
            -backend-config="bucket=gcp-playground-jens-${{ needs.env.outputs.env }}-terraform" \
            -backend-config="prefix=${{ needs.env.outputs.version }}"
      - run: |
          terraform validate
      - run: |
          terraform apply \
            -auto-approve \
            -input=false \
            -var-file="./env_${{ needs.env.outputs.env }}.tfvars" \
            -var image_version_tag="${{ needs.env.outputs.version }}"
