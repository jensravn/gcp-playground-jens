name: Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  env:
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.step1.outputs.env }}
    steps:
      - id: step1
        run: |
          if [[ ${{ github.ref_name }} == main ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "env=dev" >> $GITHUB_OUTPUT
          fi

  go-cmd-pubsub:
    needs: [env]
    environment: ${{ needs.env.outputs.env }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: go
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.6.0

      - name: Configure docker
        run: gcloud auth configure-docker

      - name: Build image
        run: |
          docker build \
          --tag eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-pubsub \
          --build-arg CMD=pubsub .

      - name: Push image
        run: docker push eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-pubsub

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy go-cmd-pubsub \
          --image eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-pubsub \
          --project ${{ secrets.PROJECT_ID }} \
          --platform managed \
          --region europe-west1

  go-cmd-web:
    needs: [env, terraform]
    environment: ${{ needs.env.outputs.env }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: go
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.6.0

      - name: Configure docker
        run: gcloud auth configure-docker

      - name: Build image
        run: |
          docker build \
          --tag eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-web \
          --build-arg CMD=web .

      - name: Push image
        run: docker push eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-web

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy go-cmd-web \
          --image eu.gcr.io/${{ secrets.PROJECT_ID }}/go-cmd-web \
          --project ${{ secrets.PROJECT_ID }} \
          --platform managed \
          --region europe-west1 \
          --allow-unauthenticated

  nextjs:
    needs: [env]
    environment: ${{ needs.env.outputs.env }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nextjs
    steps:
      - uses: actions/checkout@v3
      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - uses: google-github-actions/setup-gcloud@v0.6.0
      - run: |
          gcloud builds submit \
          --tag eu.gcr.io/${{ secrets.PROJECT_ID }}/nextjs \
          --project ${{ secrets.PROJECT_ID }}
      - run: |
          gcloud run deploy nextjs \
          --image eu.gcr.io/${{ secrets.PROJECT_ID }}/nextjs \
          --project ${{ secrets.PROJECT_ID }} \
          --platform managed \
          --region europe-west1 \
          --allow-unauthenticated

  terraform:
    needs: [env]
    environment: ${{ needs.env.outputs.env }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GCP_SA_KEY }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - run: terraform init
      - run: terraform apply -auto-approve -input=false
